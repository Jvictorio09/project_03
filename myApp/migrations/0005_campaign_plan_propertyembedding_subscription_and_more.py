# Generated by Django 5.1.2 on 2025-10-29 08:56

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myApp', '0004_company_lead_autoresponder_sent_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('blast', 'Blast'), ('sequence', 'Sequence')], default='blast', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('monthly_usd', models.IntegerField()),
                ('limits', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['monthly_usd'],
            },
        ),
        migrations.CreateModel(
            name='PropertyEmbedding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('doc_id', models.CharField(max_length=100)),
                ('chunk', models.IntegerField()),
                ('embedding', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['property', 'chunk'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('past_due', 'Past Due'), ('canceled', 'Canceled'), ('trialing', 'Trialing')], default='trialing', max_length=20)),
                ('current_period_end', models.DateTimeField()),
                ('customer_id', models.CharField(blank=True, max_length=100)),
                ('provider', models.CharField(choices=[('stripe', 'Stripe'), ('lemonsqueezy', 'LemonSqueezy')], default='stripe', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookOutbox',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target', models.CharField(choices=[('n8n', 'n8n'), ('hubspot', 'HubSpot'), ('katalyst', 'Katalyst')], max_length=20)),
                ('event_kind', models.CharField(max_length=50)),
                ('payload', models.JSONField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('attempts', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='attributes',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='lead',
            name='conversation_id',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='lead',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lead',
            name='source',
            field=models.CharField(default='chat', help_text='Source: chat, form, import, etc.', max_length=50),
        ),
        migrations.AddField(
            model_name='lead',
            name='status',
            field=models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('converted', 'Converted'), ('lost', 'Lost')], default='new', max_length=20),
        ),
        migrations.AddField(
            model_name='property',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='CampaignStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('offset_days', models.IntegerField(default=0)),
                ('subject', models.CharField(max_length=255)),
                ('body_template', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='myApp.campaign')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('logo_url', models.URLField(blank=True)),
                ('brand_primary', models.CharField(default='#6D28D9', help_text='Primary brand color', max_length=7)),
                ('brand_accent', models.CharField(default='#18AFAB', help_text='Accent brand color', max_length=7)),
                ('agent_persona', models.CharField(choices=[('friendly_consultant', 'Friendly Consultant'), ('luxury_expert', 'Luxury Expert'), ('investor_advisor', 'Investor Advisor')], default='friendly_consultant', max_length=20)),
                ('tone_formality', models.IntegerField(default=70, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tone_warmth', models.IntegerField(default=80, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tone_assertiveness', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('chat_greeting', models.TextField(default="Hello! I'm here to help you find your perfect property. What are you looking for today?")),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MessageLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('failed', 'Failed')], default='sent', max_length=20)),
                ('provider_message_id', models.CharField(blank=True, max_length=100)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.campaign')),
                ('campaign_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myApp.campaignstep')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.lead')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('agent', 'Agent')], default='agent', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('kind', models.CharField(choices=[('chat.message_user', 'Chat Message User'), ('chat.message_agent', 'Chat Message Agent'), ('lead.created', 'Lead Created'), ('lead.qualified', 'Lead Qualified'), ('campaign.sent', 'Campaign Sent'), ('campaign.open', 'Campaign Open'), ('campaign.click', 'Campaign Click'), ('property.viewed', 'Property Viewed'), ('property.enriched', 'Property Enriched')], max_length=50)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddField(
            model_name='lead',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddField(
            model_name='outboxmessage',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddField(
            model_name='property',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddField(
            model_name='propertyupload',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['organization', 'status'], name='myApp_lead_organiz_97c82b_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['organization', 'created_at'], name='myApp_lead_organiz_c0ba2c_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['organization', 'is_active'], name='myApp_prope_organiz_d917ce_idx'),
        ),
        migrations.AddField(
            model_name='propertyembedding',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddField(
            model_name='propertyembedding',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.property'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='myApp.plan'),
        ),
        migrations.AddField(
            model_name='webhookoutbox',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.organization'),
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['organization', 'status'], name='myApp_messa_organiz_a6fa24_idx'),
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['lead', 'campaign'], name='myApp_messa_lead_id_e38d1f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='membership',
            unique_together={('user', 'organization')},
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['organization', 'kind'], name='myApp_event_organiz_1d0bf2_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['organization', 'created_at'], name='myApp_event_organiz_9a3ca7_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyembedding',
            index=models.Index(fields=['organization', 'property'], name='myApp_prope_organiz_2d8904_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='propertyembedding',
            unique_together={('organization', 'property', 'chunk')},
        ),
        migrations.AddIndex(
            model_name='webhookoutbox',
            index=models.Index(fields=['organization', 'status'], name='myApp_webho_organiz_d6611c_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookoutbox',
            index=models.Index(fields=['status', 'created_at'], name='myApp_webho_status_6a7385_idx'),
        ),
    ]
